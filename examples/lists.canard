$< map [+ 1] filter [! % swap 3] [1 2 3 4 5 6 7 8 9 10]

= 'map [? [:: map %^ 1 [head swap .] dup %^ 1 [tail dup]] [nb] :? nip]
    nb [map [f] (:: x y) -> :: map [f] x f y
        %^ 1 [tail dup]    [f] (:: x y)       = [f] y (:: x y)
        dup                [f] y (:: x y)     = [f] [f] y (:: x y)
        %^ 1 [head swap .] [f] [f] y (:: x y) = [f] x (f y)
        :: map             [f] x (f y)        = :: map [f] x f y

        map [f] [] -> []]

= 'filter [? [? [:: swap] [nb] . %^ 3 [filter] %% 3 [2 1 1 2 0] :^ swap] [nb] :? nip]
       nb [filter [f] (:: x y) -> ? [:: swap] [nb] f y y filter [f] x
           :^ swap            [f] (:: x y)         = x y [f]
           %% 3 [2 1 1 2 0]   x y [f]              = [f] y y [f] x
           %^ 3 [filter]      [f] y y [f] x        = [f] y y filter [f] x
           ? [:: swap] [nb] . [f] y y filter [f] x = ? [:: swap] [nb] f y y filter [f] x

           filter [f] [] -> []]

= 'tail [%^ 1 [nb] :^]
= 'head [nb :^]

= 'pull [%% 0 :: []]
= 'nb   [%% 1 []]
= 'swap [%% 2 [1 0]]
= 'nip  [pull 1]
= 'dup  [pull 0]
